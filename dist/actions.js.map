{"version":3,"sources":["../src/actions.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAKqB,WAAW,GAC9B,SADmB,WAAW,GACM;MAAxB,MAAM,yDAAC,EAAE;MAAE,OAAO,yDAAG,EAAE;;wBADhB,WAAW;;AAG5B,MAAM,WAAW,GAAG;AAClB,QAAI,EAAE,aAAa;AACnB,eAAW,EAAG,SAAS;AACvB,UAAM,EAAE,KAAK;AACb,WAAO,EAAE;AACP,wBAAkB,EAAE,gBAAgB;KACrC;AACD,QAAI,EAAG,EAAE;GACV,CAAA;;AAED,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAE,MAAM,CAAE,WAAW,EAAE,OAAO,CAAE,CAAA;;AAE/D,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,UAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAK;;;AAGlE,QAAI,GAAG,iBAAE,OAAO,CAAC,IAAI,CAAC,GAAC,IAAI,GAAC,CAAC,IAAI,CAAC,CAAC;AACnC,WAAO;AACL,UAAI,aAzBU,cAAc,AAyBR;AACpB,SAAG,EAAE,GAAG;AACR,UAAI,EAAC,IAAI;AACT,YAAM,EAAE,MAAM;AACd,UAAI,EAAE,IAAI;KAEX,CAAA;GACF,CAAA;;;AAED,MAAM,UAAU,GAAG,SAAb,UAAU,CAAI,GAAG,EAAE,IAAI,EAAE,MAAM,EAAK;AACxC,WAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AACxB,WAAO,UAAA,QAAQ,EAAI;;AAEjB,aAAO,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CACzB,IAAI,CAAC,UAAA,QAAQ;eAAI,QAAQ,CAAC,IAAI,EAAE;OAAA,CAAC,CACjC,IAAI,CAAC,UAAA,IAAI;eAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;OAAA,CAAC,CAC5D,KAAK,CAAC,UAAA,GAAG,EAAI;AAAE,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;OAAE,CAAC,CAAA;KACpC,CAAA;GACF,CAAA;;AAED,MAAI,CAAC,GAAG,GAAG,YAA0B;QAAzB,IAAI,yDAAC,EAAE;QAAE,QAAQ,yDAAC,EAAE;;AAC9B,QAAI,MAAM,GAAG,uBAAa,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AAC7C,WAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACjD,WAAO,CAAC,IAAI,GAAG,IAAI,CAAA;AACnB,WAAO,UAAC,QAAQ,EAAE,QAAQ,EAAK;AAAC,aAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;KAAC,CAAA;GAC3G,CAAA;CAGF;;kBAhDkB,WAAW","file":"actions.js","sourcesContent":["import {ACTION_FETCH, ACTION_SUCCESS, ACTION_FAIL, ACTION_RESET} from './constants'\nimport 'isomorphic-fetch'\nimport _ from 'lodash'\nimport pathToRegexp from 'path-to-regexp'\n\nexport default class FluxActions{\n  constructor(travel={}, options = {}){\n\n    const initOptions = {\n      mode :'same-origin',\n      credentials : 'include',\n      method: 'get',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      body : ''\n    }\n\n    const Options = this.options = _.assign( initOptions, options )\n\n    const timeParadox = this.timeParadox = (url, name, method, json) => {\n      //console.log('time paradox')\n      //json = _.isObject(json) && _.isArray(json)?json:[json]\n      json = _.isArray(json)?json:[json];\n      return {\n        type: ACTION_SUCCESS,\n        url: url,\n        name:name,\n        method: method,\n        data: json,\n        //receivedAt: Date.now()\n      }\n    }\n\n    const timeTravel = (url, name, method) => {\n      Options.method = method;\n      return dispatch => {\n        //console.log('time travel', url)\n        return fetch(url, Options)\n        .then(response => response.json())\n        .then(json => dispatch(timeParadox(url, name, method, json)))\n        .catch(err => { console.log(err) })\n      }\n    }\n\n    this.run = (body='', urlParms={}) => {\n      let toPath = pathToRegexp.compile(travel.url)\n      console.log('run to destination', travel.method);\n      Options.body = body\n      return (dispatch, getState) => {return dispatch(timeTravel(toPath(urlParms), travel.name, travel.method))}\n    }\n\n\n  }\n}\n"]}